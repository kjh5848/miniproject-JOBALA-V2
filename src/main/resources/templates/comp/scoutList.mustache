{{> layout/header}}

<!-- 기업 인재명단 페이지 -->

<div class="container">

    <!-- 인재 명단 삭제 -->
    <br><br>
    <!-- 필터링 start -->
    <form id="searchForm" action="/comp/resumeSearch" method="get" enctype="application/x-www-form-urlencoded">
        <div class="card-body select-box border border-2 mb-5 rounded-3">
            <div class="select-box ">
                <div class="select-package bg-info p-3 m-2 rounded-3">
                    <h4>기술스택</h4>
                    <div class="checkbox-package">
                        <input type="checkbox" class="checkbox" value="Java" onchange="skillsFilter(this);"/> Java
                        <input type="checkbox" class="checkbox" value="JavaScript" onchange="skillsFilter(this);"/>JavaScript
                        <input type="checkbox" class="checkbox" value="Spring" onchange="skillsFilter(this);"/> Spring
                        <input type="checkbox" class="checkbox" value="HTML" onchange="skillsFilter(this);"/> HTML
                        <input type="checkbox" class="checkbox" value="jQuery" onchange="skillsFilter(this);"/> jQuery
                        <input type="checkbox" class="checkbox" value="MySQL" onchange="skillsFilter(this);"/> MySQL
                    </div>

                    <script>
                        // 기술스택 필터 적용
                        var skillArr = new Array(); //필터 내용을 저장하는 배열

                        //필터 내용을 저장하는 function
                        function skillsFilter(target) {

                            var skillVal = target.value; //check value
                            var confirmCheck = target.checked; //check여부 확인
                            console.log("필터 선택값 : " + skillVal);
                            console.log("선택여부 : " + confirmCheck);

                            if (confirmCheck == true) { // check true
                                skillArr.push(skillVal); // check value filter 배열에 입력
                            } else { // check false
                                skillArr.splice(skillArr.indexOf(skillVal), 1); // check value filter 배열내용 삭제
                            }
                            console.log("필터입력값 출력 : " + skillArr);
                        }

                        function applyFilters() {

                            var skillString = JSON.stringify(skillArr); // JSON 문자열로 변환
                            document.getElementById("skillsInput").value = skillString; // 숨겨진 input에 값 설정

                            // 폼 제출
                            document.getElementById("searchForm").submit(); // 올바른 폼 ID를 사용
                        }
                    </script>

                </div>

                <div class="select-package bg-info p-3 m-2 rounded-3">
                    <h4>경력</h4>
                    <div class="checkbox-package">
                        <input type="checkbox" name="career" class="checkbox" value="신입"/> 신입
                        <input type="checkbox" name="career" class="checkbox" value="경력"/> 경력
                    </div>
                </div>

                <div class="select-package bg-info p-3 m-2 rounded-3">
                    <h4>학력</h4>
                    <div class="checkbox-package">
                        <input type="checkbox" name="edu" class="checkbox" value="고등학교 졸업"/> 고졸
                        <input type="checkbox" name="edu" class="checkbox" value="대학교 졸업"/> 대졸
                    </div>
                </div>

                <div class="select-package bg-info p-3 m-2 rounded-3">
                    <h4>희망 직무</h4>
                    <div class="checkbox-package">
                        <input type="checkbox" name="hopeJob" class="checkbox" value="프론트엔드"/>
                        프론트엔드
                        <input type="checkbox" name="hopeJob" class="checkbox" value="백엔드"/> 백엔드
                    </div>
                </div>

                <div class="text-center my-3"> <!-- 가운데 정렬 및 위아래 여백 추가 -->
                    <input type="hidden" name="skills" id="skillsInput">
                    <button type="submit" class="btn btn-primary mx-2" onclick="applyFilters()"> <!-- 좌우 여백만 추가 -->
                        필터 적용하기
                    </button>
                </div>
            </div>
        </div>
    </form>

    <!-- 필터링 end -->

    <!-- 인재 명단 start -->
    <h3 class="text-left mb-4">인재 명단</h3>
    <div class="row">
        {{#resumeList}}
            <div class="col-lg-4 col-md-6 col-12">
                <div onClick="location.href='/guest/resume/{{id}}'">
                    <div class="card col-3 border-0 shadow" style="width: 100%;">
                        <img class="card-img-top img-fluid" src="/image/{{imgFilename}}"
                             alt="이미지를 표시할 수 없습니다.">
                        <div class="card-body text-start">
                            <br>
                            <h5 class="card-title">{{name}}</h5>
                            <hr>
                            <p class="card-text">{{resumeTitle}} <br> {{edu}} {{career}}</p>
                        </div>
                    </div>
                </div>
            </div>
        {{/resumeList}}
    </div>
</div>
<br><br><br>
<!-- 인재 명단 end -->

<!--<script>-->
<!--    // 대체 이미지 URL을 사용자가 맞춤 설정할 수 있도록 함수를 정의합니다.-->
<!--    function setResumeImageURL(resumeList) {-->
<!--        // jobopenList 엘리먼트를 가져옵니다. 셀렉터는 jobopenList를 감싸는 엘리먼트에 적용되어야 정확합니다.-->
<!--        var cards = document.querySelectorAll('.card img');-->

<!--        // 각 card에 대해 함수를 실행합니다.-->
<!--        cards.forEach(function (card, index) {-->
<!--            if (resumeList[index] && resumeList[index].imageURL) {-->
<!--                // imageURL을 제공된 URL로 설정합니다.-->
<!--                card.src = resumeList[index].imageURL;-->
<!--            } else {-->
<!--                // 이미지 URL이 존재하지 않으면 기본 이미지로 설정합니다.-->
<!--                card.src = '/path/to/default/image.jpg'; // 경로를 적절한 기본 이미지 경로로 대체-->
<!--            }-->
<!--        });-->
<!--    }-->

<!--    // 문서가 로드될 때 함수를 호출합니다.-->
<!--    document.addEventListener('DOMContentLoaded', function () {-->
<!--        // 모의 데이터: 실제 사용할 때는 서버에서 데이터를 가져오거나 다른 방식으로 구성하세요.-->
<!--        var mockResumeList = [-->
<!--            {id: 9, imageURL: '/image/userimage9.png'},-->
<!--            {id: 8, imageURL: '/image/userimage8.png'},-->
<!--            {id: 7, imageURL: '/image/userimage7.png'},-->
<!--            {id: 6, imageURL: '/image/userimage6.png'},-->
<!--            {id: 5, imageURL: '/image/userimage5.png'},-->
<!--            {id: 4, imageURL: '/image/userimage4.png'},-->
<!--            {id: 3, imageURL: '/image/userImage3.jpg'},-->
<!--            {id: 2, imageURL: '/image/userImage2.jpg'},-->
<!--            {id: 1, imageURL: '/image/userImage.jpg'}-->
<!--        ];-->

<!--        // 함수 호출-->
<!--        setResumeImageURL(mockResumeList);-->
<!--    });-->
<!--</script>-->

{{> layout/footer}}